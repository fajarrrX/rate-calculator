name: SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  tests:
    name: Tests and SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml, sqlite3
          coverage: xdebug
          
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Remove lock file and install dependencies
        run: |
          rm -f composer.lock
          composer install --no-progress --prefer-dist --optimize-autoloader
        
      - name: Generate application key
        run: php artisan key:generate
        
      - name: Directory Permissions
        run: chmod -R 755 storage bootstrap/cache
        
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
          
      - name: Execute tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          XDEBUG_MODE: coverage
        run: |
          php -d xdebug.mode=coverage vendor/bin/phpunit --configuration phpunit-coverage.xml --coverage-clover=coverage.xml --coverage-text --colors=never
        
      - name: Upload coverage to SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Bitegarden SonarCloud Report from Google Drive
        run: |
          echo "üåê Downloading Bitegarden SonarCloud Report JAR from Google Drive..."
          
          # Google Drive direct download URL for large files (bypasses virus scan warning)
          FILE_ID="1nDR-9dDqr3WwDHBYvgOZQycmS5UDylYS"
          GDRIVE_URL="https://drive.usercontent.google.com/download?id=${FILE_ID}&export=download&confirm=t"
          
          # Download with curl (handles redirects and large files)
          curl -L -o bitegarden-sonarcloud-report-1.8.1.jar "$GDRIVE_URL"
          
          # Verify the download
          if [ ! -f bitegarden-sonarcloud-report-1.8.1.jar ]; then
            echo "‚ùå JAR file download failed"
            echo "Please check the Google Drive URL in secrets.BITEGARDEN_JAR_URL"
            exit 1
          fi
          
          # Check file size (should be > 1MB for JAR files)
          SIZE=$(stat -c%s bitegarden-sonarcloud-report-1.8.1.jar)
          if [ $SIZE -lt 1000000 ]; then
            echo "‚ùå JAR file seems too small (size: $SIZE bytes)"
            echo "This might be an HTML error page instead of the JAR file"
            echo "First few lines of downloaded file:"
            head -5 bitegarden-sonarcloud-report-1.8.1.jar
            exit 1
          fi
          
          echo "‚úÖ JAR file downloaded successfully (size: $SIZE bytes)"
          
          # Test if it's actually a JAR file
          file bitegarden-sonarcloud-report-1.8.1.jar || echo "File type check not available"

      - name: Generate SonarCloud PDF Report
        run: |
          # Set current date for filename
          CURRENT_DATE=$(date +%Y-%m-%d)
          OUTPUT_FILE="sonar-report-${CURRENT_DATE}.pdf"
          
          echo "üöÄ Generating SonarCloud PDF Report..."
          echo "üìä Organization: asdordigital"
          echo "üìÅ Project: fajarrrX_rate-calculator"
          echo "üìÑ Output: $OUTPUT_FILE"
          
          java -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organizationKey=asdordigital \
            -Dsonar.projectKey=fajarrrX_rate-calculator \
            -Dreport.type=0 \
            -Doutput="$OUTPUT_FILE" \
            -jar bitegarden-sonarcloud-report-1.8.1.jar
          
          # Verify report was generated
          if [ -f "$OUTPUT_FILE" ]; then
            echo "‚úÖ Report generated successfully: $OUTPUT_FILE"
            ls -la "$OUTPUT_FILE"
          else
            echo "‚ùå Report generation failed"
            exit 1
          fi

      - name: Upload PDF Report as Artifact  
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: sonar-report-*.pdf
          retention-days: 30
        if: always()